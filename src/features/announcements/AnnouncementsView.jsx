// src/features/announcements/AnnouncementsView.jsx

import React, { useState } from 'react';
import toast, { Toaster } from 'react-hot-toast';
import { Send } from 'lucide-react';

const AnnouncementsView = ({ 
    announcements = [], 
    // ðŸ’¡ FINAL FIX: Add a default no-op function. This ensures the prop is NEVER undefined.
    handleAddAnnouncement = async () => false, 
    userRole, 
    courses = [] 
}) => {
Â  const [title, setTitle] = useState('');
Â  const [content, setContent] = useState('');
Â  const [selectedCourse, setSelectedCourse] = useState('all');

Â  const handleSubmit = async (e) => {
Â  Â  e.preventDefault();
Â  Â  
Â  Â  // The defensive check is now unnecessary but harmless, as the prop is guaranteed to be a function.
Â  Â  // if (typeof handleAddAnnouncement !== 'function') { ... } 
    
Â  Â  if (!title || !content) {
Â  Â  Â  toast.error('Title and content are required.');
Â  Â  Â  return;
Â  Â  }
Â  Â  
Â  Â  // This call is now safe.
Â  Â  const success = await handleAddAnnouncement({ title, content, courseCode: selectedCourse }); 
Â  Â  
Â  Â  // Only reset the form if the announcement was successful
Â  Â  if (success) {
Â  Â  Â  setTitle('');
Â  Â  Â  setContent('');
Â  Â  Â  setSelectedCourse('all');
Â  Â  }
Â  };
Â  Â  
Â  const getCourseName = (courseCode) => {
Â  Â  if (courseCode === 'all') {
Â  Â  Â  return 'All Courses';
Â  Â  }
Â  Â  // Assumes courses prop contains objects with 'code' and 'name' fields
Â  Â  const course = courses.find(c => c.code === courseCode);
Â  Â  return course ? course.name : 'Unknown Course';
Â  };

Â  const filteredAnnouncements = announcements.filter(announcement => {
Â  Â  // Use courseCode property for filtering
Â  Â  if (selectedCourse === 'all') return true;
Â  Â  return announcement.courseCode === selectedCourse;
Â  });

Â  return (
Â  Â  <div className="flex-1 p-8">
Â  Â  Â  <Toaster position="top-right" reverseOrder={false} />
Â  Â  Â  <div className="w-full max-w-7xl">
Â  Â  Â  Â  <h2 className="text-2xl font-semibold text-gray-700 mb-6">Announcements</h2>

Â  Â  Â  Â  {userRole === 'admin' && (
Â  Â  Â  Â  Â  <div className="bg-white rounded-lg shadow p-6 mb-8">
Â  Â  Â  Â  Â  Â  <h3 className="text-xl font-semibold mb-4">Create New Announcement</h3>
Â  Â  Â  Â  Â  Â  <form onSubmit={handleSubmit} className="space-y-4">
Â  Â  Â  Â  Â  Â  Â  <div>
Â  Â  Â  Â  Â  Â  Â  Â  <label htmlFor="title" className="block text-sm font-medium text-gray-700">Title</label>
Â  Â  Â  Â  Â  Â  Â  Â  <input
Â  Â  Â  Â  Â  Â  Â  Â  Â  type="text"
Â  Â  Â  Â  Â  Â  Â  Â  Â  id="title"
Â  Â  Â  Â  Â  Â  Â  Â  Â  value={title}
Â  Â  Â  Â  Â  Â  Â  Â  Â  onChange={(e) => setTitle(e.target.value)}
Â  Â  Â  Â  Â  Â  Â  Â  Â  className="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 p-2"
Â  Â  Â  Â  Â  Â  Â  Â  Â  placeholder="e.g., Important Update for All Students"
Â  Â  Â  Â  Â  Â  Â  Â  Â  required
Â  Â  Â  Â  Â  Â  Â  Â  />
Â  Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  Â  <div>
Â  Â  Â  Â  Â  Â  Â  Â  <label htmlFor="content" className="block text-sm font-medium text-gray-700">Content</label>
Â  Â  Â  Â  Â  Â  Â  Â  <textarea
Â  Â  Â  Â  Â  Â  Â  Â  Â  id="content"
Â  Â  Â  Â  Â  Â  Â  Â  Â  value={content}
Â  Â  Â  Â  Â  Â  Â  Â  Â  onChange={(e) => setContent(e.target.value)}
Â  Â  Â  Â  Â  Â  Â  Â  Â  rows="4"
Â  Â  Â  Â  Â  Â  Â  Â  Â  className="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 p-2"
Â  Â  Â  Â  Â  Â  Â  Â  Â  placeholder="Write your announcement here..."
Â  Â  Â  Â  Â  Â  Â  Â  Â  required
Â  Â  Â  Â  Â  Â  Â  Â  ></textarea>
Â  Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  Â  <div>
Â  Â  Â  Â  Â  Â  Â  Â  <label htmlFor="course-select" className="block text-sm font-medium text-gray-700">Send to Course</label>
Â  Â  Â  Â  Â  Â  Â  Â  <select
Â  Â  Â  Â  Â  Â  Â  Â  Â  id="course-select"
Â  Â  Â  Â  Â  Â  Â  Â  Â  value={selectedCourse}
Â  Â  Â  Â  Â  Â  Â  Â  Â  onChange={(e) => setSelectedCourse(e.target.value)}
Â  Â  Â  Â  Â  Â  Â  Â  Â  className="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 p-2"
Â  Â  Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  Â  Â  <option value="all">All Courses</option>
Â  Â  Â  Â  Â  Â  Â  Â  Â  {courses.map(course => (
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <option key={course.id} value={course.code}>{course.name}</option>
Â  Â  Â  Â  Â  Â  Â  Â  Â  ))}
Â  Â  Â  Â  Â  Â  Â  Â  </select>
Â  Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  Â  <div className="flex justify-end">
Â  Â  Â  Â  Â  Â  Â  Â  <button
Â  Â  Â  Â  Â  Â  Â  Â  Â  type="submit"
Â  Â  Â  Â  Â  Â  Â  Â  Â  className="flex items-center space-x-2 px-4 py-2 text-sm text-white bg-indigo-600 rounded-md hover:bg-indigo-700 transition-colors duration-200"
Â  Â  Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  Â  Â  <Send size={16} />
Â  Â  Â  Â  Â  Â  Â  Â  Â  <span>Send Announcement</span>
Â  Â  Â  Â  Â  Â  Â  Â  </button>
Â  Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  </form>
Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  )}

Â  Â  Â  Â  <div className="space-y-6">
Â  Â  Â  Â  Â  <h3 className="text-xl font-semibold mb-4">All Announcements</h3>
Â  Â  Â  Â  Â  {filteredAnnouncements.length > 0 ? (
Â  Â  Â  Â  Â  Â  filteredAnnouncements.map(announcement => (
Â  Â  Â  Â  Â  Â  Â  <div key={announcement.id} className="bg-white rounded-lg shadow p-6 border-l-4 border-indigo-500">
Â  Â  Â  Â  Â  Â  Â  Â  <div className="flex items-center justify-between mb-2">
Â  Â  Â  Â  Â  Â  Â  Â  Â  <h4 className="text-lg font-semibold text-gray-900">{announcement.title}</h4>
Â  Â  Â  Â  Â  Â  Â  Â  Â  <div className="flex items-center space-x-2">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <span className="text-sm text-gray-500">{announcement.date}</span>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <span className="text-xs font-medium bg-indigo-100 text-indigo-700 px-2 py-1 rounded-full">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {getCourseName(announcement.courseCode)}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </span>
Â  Â  Â  Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  Â  Â  <p className="text-gray-600">{announcement.content}</p>
Â  Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  ))
Â  Â  Â  Â  Â  ) : (
Â  Â  Â  Â  Â  Â  <div className="text-center py-12 text-gray-500">
Â  Â  Â  Â  Â  Â  Â  No announcements have been made yet.
Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  )}
Â  Â  Â  Â  </div>
Â  Â  Â  </div>
Â  Â  Â  {/* The Toaster is used here to ensure any errors caught by the dummy function
           if the parent fails to pass the real one, are still displayed. */}
Â  Â  </div>
Â  );
};

export default AnnouncementsView;